

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Jun 13 14:25:49 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     	;# 
    25  0001                     	;# 
    26  0002                     	;# 
    27  0003                     	;# 
    28  0004                     	;# 
    29  0005                     	;# 
    30  0006                     	;# 
    31  0007                     	;# 
    32  0008                     	;# 
    33  0009                     	;# 
    34  000A                     	;# 
    35  000B                     	;# 
    36  000C                     	;# 
    37  000D                     	;# 
    38  000E                     	;# 
    39  000E                     	;# 
    40  000F                     	;# 
    41  0010                     	;# 
    42  0011                     	;# 
    43  0012                     	;# 
    44  0013                     	;# 
    45  0014                     	;# 
    46  0015                     	;# 
    47  0015                     	;# 
    48  0016                     	;# 
    49  0017                     	;# 
    50  0018                     	;# 
    51  0019                     	;# 
    52  001A                     	;# 
    53  001B                     	;# 
    54  001B                     	;# 
    55  001C                     	;# 
    56  001D                     	;# 
    57  001E                     	;# 
    58  001F                     	;# 
    59  0081                     	;# 
    60  0085                     	;# 
    61  0086                     	;# 
    62  0087                     	;# 
    63  0088                     	;# 
    64  0089                     	;# 
    65  008C                     	;# 
    66  008D                     	;# 
    67  008E                     	;# 
    68  0091                     	;# 
    69  0092                     	;# 
    70  0093                     	;# 
    71  0094                     	;# 
    72  0098                     	;# 
    73  0099                     	;# 
    74  009C                     	;# 
    75  009D                     	;# 
    76  009E                     	;# 
    77  009F                     	;# 
    78  010C                     	;# 
    79  010D                     	;# 
    80  010E                     	;# 
    81  010F                     	;# 
    82  018C                     	;# 
    83  018D                     	;# 
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  009F                     	;# 
   258  010C                     	;# 
   259  010D                     	;# 
   260  010E                     	;# 
   261  010F                     	;# 
   262  018C                     	;# 
   263  018D                     	;# 
   264  000E                     _TMR1	set	14
   265  001F                     _ADCON0bits	set	31
   266  001E                     _ADRESH	set	30
   267  000B                     _INTCONbits	set	11
   268  000C                     _PIR1bits	set	12
   269  0005                     _PORTA	set	5
   270  0006                     _PORTB	set	6
   271  0007                     _PORTC	set	7
   272  001A                     _RCREG	set	26
   273  0018                     _RCSTAbits	set	24
   274  0010                     _T1CONbits	set	16
   275  0001                     _TMR0	set	1
   276  0019                     _TXREG	set	25
   277  00C1                     _OERR	set	193
   278  009F                     _ADCON1bits	set	159
   279  009E                     _ADRESL	set	158
   280  0081                     _OPTION_REGbits	set	129
   281  008C                     _PIE1bits	set	140
   282  0099                     _SPBRG	set	153
   283  0085                     _TRISA	set	133
   284  0086                     _TRISB	set	134
   285  0087                     _TRISC	set	135
   286  0098                     _TXSTAbits	set	152
   287                           
   288                           	psect	strings
   289  016F                     __pstrings:	
   290  016F                     stringtab:	
   291  016F                     __stringtab:	
   292  016F                     stringcode:	
   293                           ;	String table - string pointers are 1 byte each
   294                           
   295  016F                     stringdir:	
   296  016F  3001               	movlw	high stringdir
   297  0170  008A               	movwf	10
   298  0171  0804               	movf	4,w
   299  0172  0A84               	incf	4,f
   300  0173  0782               	addwf	2,f
   301  0174                     __stringbase:	
   302  0174  3400               	retlw	0
   303  0175                     __end_of__stringtab:	
   304  0175                     __stringdata:	
   305  0175                     STR_2:	
   306  0175  340A               	retlw	10
   307  0176  340D               	retlw	13
   308  0177  3420               	retlw	32	;' '
   309  0178  342D               	retlw	45	;'-'
   310  0179  342D               	retlw	45	;'-'
   311  017A  342D               	retlw	45	;'-'
   312  017B  342D               	retlw	45	;'-'
   313  017C  342D               	retlw	45	;'-'
   314  017D  342D               	retlw	45	;'-'
   315  017E  342D               	retlw	45	;'-'
   316  017F  3420               	retlw	32	;' '
   317  0180  3445               	retlw	69	;'E'
   318  0181  3453               	retlw	83	;'S'
   319  0182  3454               	retlw	84	;'T'
   320  0183  344F               	retlw	79	;'O'
   321  0184  3455               	retlw	85	;'U'
   322  0185  3452               	retlw	82	;'R'
   323  0186  344F               	retlw	79	;'O'
   324  0187  3420               	retlw	32	;' '
   325  0188  3444               	retlw	68	;'D'
   326  0189  3445               	retlw	69	;'E'
   327  018A  3420               	retlw	32	;' '
   328  018B  3450               	retlw	80	;'P'
   329  018C  3449               	retlw	73	;'I'
   330  018D  344C               	retlw	76	;'L'
   331  018E  3448               	retlw	72	;'H'
   332  018F  3441               	retlw	65	;'A'
   333  0190  3420               	retlw	32	;' '
   334  0191  342D               	retlw	45	;'-'
   335  0192  342D               	retlw	45	;'-'
   336  0193  342D               	retlw	45	;'-'
   337  0194  342D               	retlw	45	;'-'
   338  0195  342D               	retlw	45	;'-'
   339  0196  342D               	retlw	45	;'-'
   340  0197  342D               	retlw	45	;'-'
   341  0198  3420               	retlw	32	;' '
   342  0199  340A               	retlw	10
   343  019A  340D               	retlw	13
   344  019B  3420               	retlw	32	;' '
   345  019C  3400               	retlw	0
   346  019D                     STR_1:	
   347  019D  3449               	retlw	73	;'I'
   348  019E  346E               	retlw	110	;'n'
   349  019F  3469               	retlw	105	;'i'
   350  01A0  3463               	retlw	99	;'c'
   351  01A1  3469               	retlw	105	;'i'
   352  01A2  3461               	retlw	97	;'a'
   353  01A3  346C               	retlw	108	;'l'
   354  01A4  3469               	retlw	105	;'i'
   355  01A5  347A               	retlw	122	;'z'
   356  01A6  3461               	retlw	97	;'a'
   357  01A7  346E               	retlw	110	;'n'
   358  01A8  3464               	retlw	100	;'d'
   359  01A9  346F               	retlw	111	;'o'
   360  01AA  3420               	retlw	32	;' '
   361  01AB  3455               	retlw	85	;'U'
   362  01AC  3453               	retlw	83	;'S'
   363  01AD  3441               	retlw	65	;'A'
   364  01AE  3452               	retlw	82	;'R'
   365  01AF  3454               	retlw	84	;'T'
   366  01B0  342E               	retlw	46	;'.'
   367  01B1  342E               	retlw	46	;'.'
   368  01B2  342E               	retlw	46	;'.'
   369  01B3  3400               	retlw	0
   370  01B4                     __end_of__stringdata:	
   371                           
   372                           ; #config settings
   373  0000                     
   374                           	psect	cinit
   375  0015                     start_initialization:	
   376  0015                     __initialization:	
   377                           
   378                           ; Clear objects allocated to COMMON
   379  0015  01FA               	clrf	__pbssCOMMON& (0+127)
   380  0016  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   381                           
   382                           ; Clear objects allocated to BANK0
   383  0017  01B9               	clrf	__pbssBANK0& (0+127)
   384  0018  01BA               	clrf	(__pbssBANK0+1)& (0+127)
   385  0019  01BB               	clrf	(__pbssBANK0+2)& (0+127)
   386  001A  01BC               	clrf	(__pbssBANK0+3)& (0+127)
   387  001B  01BD               	clrf	(__pbssBANK0+4)& (0+127)
   388  001C  01BE               	clrf	(__pbssBANK0+5)& (0+127)
   389  001D                     end_of_initialization:	
   390                           ;End of C runtime variable initialization code
   391                           
   392  001D                     __end_of__initialization:	
   393  001D  0183               	clrf	3
   394  001E  120A  118A  29B4   	ljmp	_main	;jump to C main() function
   395                           
   396                           	psect	bssCOMMON
   397  007A                     __pbssCOMMON:	
   398  007A                     _contador:	
   399  007A                     	ds	2
   400                           
   401                           	psect	bssBANK0
   402  0039                     __pbssBANK0:	
   403  0039                     _ADC_Buffer:	
   404  0039                     	ds	6
   405                           
   406                           	psect	cstackCOMMON
   407  0070                     __pcstackCOMMON:	
   408  0070                     ?_ADC_Read:	
   409  0070                     ?_USART_WriteChar:	
   410                           ; 0 bytes @ 0x0
   411                           
   412  0070                     ?_TIMER1_Init:	
   413                           ; 0 bytes @ 0x0
   414                           
   415  0070                     ?_ADC_Init:	
   416                           ; 0 bytes @ 0x0
   417                           
   418  0070                     ?_USART_WriteString:	
   419                           ; 0 bytes @ 0x0
   420                           
   421  0070                     ?_ISR:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  0070                     ?_main:	
   425                           ; 0 bytes @ 0x0
   426                           
   427  0070                     ?i1_USART_WriteChar:	
   428                           ; 0 bytes @ 0x0
   429                           
   430  0070                     ??i1_USART_WriteChar:	
   431                           ; 0 bytes @ 0x0
   432                           
   433  0070                     ?i1_TIMER1_Set:	
   434                           ; 0 bytes @ 0x0
   435                           
   436  0070                     i1USART_WriteChar@USART_Data:	
   437                           ; 0 bytes @ 0x0
   438                           
   439  0070                     ADC_Read@channel:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     i1TIMER1_Set@count:	
   443                           ; 2 bytes @ 0x0
   444                           
   445                           
   446                           ; 2 bytes @ 0x0
   447  0070                     	ds	2
   448  0072                     ??_ADC_Read:	
   449  0072                     ??i1_TIMER1_Set:	
   450                           ; 0 bytes @ 0x2
   451                           
   452                           
   453                           ; 0 bytes @ 0x2
   454  0072                     	ds	1
   455  0073                     ??_ISR:	
   456                           
   457                           ; 0 bytes @ 0x3
   458  0073                     	ds	5
   459  0078                     ISR@checksum:	
   460                           
   461                           ; 1 bytes @ 0x8
   462  0078                     	ds	1
   463  0079                     ISR@index:	
   464                           
   465                           ; 1 bytes @ 0x9
   466  0079                     	ds	1
   467                           
   468                           	psect	cstackBANK0
   469  0020                     __pcstackBANK0:	
   470  0020                     ?_TIMER1_Set:	
   471  0020                     ??_USART_WriteChar:	
   472                           ; 0 bytes @ 0x0
   473                           
   474  0020                     ??_TIMER1_Init:	
   475                           ; 0 bytes @ 0x0
   476                           
   477  0020                     ??_ADC_Init:	
   478                           ; 0 bytes @ 0x0
   479                           
   480  0020                     ?___aldiv:	
   481                           ; 0 bytes @ 0x0
   482                           
   483  0020                     USART_WriteChar@USART_Data:	
   484                           ; 4 bytes @ 0x0
   485                           
   486  0020                     TIMER1_Set@count:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0020                     ___aldiv@divisor:	
   490                           ; 2 bytes @ 0x0
   491                           
   492                           
   493                           ; 4 bytes @ 0x0
   494  0020                     	ds	1
   495  0021                     ??_USART_WriteString:	
   496                           
   497                           ; 0 bytes @ 0x1
   498  0021                     	ds	1
   499  0022                     ??_TIMER1_Set:	
   500  0022                     USART_WriteString@str:	
   501                           ; 0 bytes @ 0x2
   502                           
   503                           
   504                           ; 1 bytes @ 0x2
   505  0022                     	ds	2
   506  0024                     ___aldiv@dividend:	
   507                           
   508                           ; 4 bytes @ 0x4
   509  0024                     	ds	4
   510  0028                     ??___aldiv:	
   511                           
   512                           ; 0 bytes @ 0x8
   513  0028                     	ds	1
   514  0029                     ___aldiv@counter:	
   515                           
   516                           ; 1 bytes @ 0x9
   517  0029                     	ds	1
   518  002A                     ___aldiv@sign:	
   519                           
   520                           ; 1 bytes @ 0xA
   521  002A                     	ds	1
   522  002B                     ___aldiv@quotient:	
   523                           
   524                           ; 4 bytes @ 0xB
   525  002B                     	ds	4
   526  002F                     ?_USART_Init:	
   527  002F                     USART_Init@BaudRate:	
   528                           ; 0 bytes @ 0xF
   529                           
   530                           
   531                           ; 4 bytes @ 0xF
   532  002F                     	ds	4
   533  0033                     ??_USART_Init:	
   534                           
   535                           ; 0 bytes @ 0x13
   536  0033                     	ds	5
   537  0038                     USART_Init@BR:	
   538                           
   539                           ; 1 bytes @ 0x18
   540  0038                     	ds	1
   541  0039                     ??_main:	
   542                           
   543                           	psect	maintext
   544  01B4                     __pmaintext:	
   545                           ; 0 bytes @ 0x19
   546 ;;
   547 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   548 ;;
   549 ;; *************** function _main *****************
   550 ;; Defined at:
   551 ;;		line 55 in file "C:\Users\Ninguem\Desktop\Trabalho final embarcado\supervv\Firmware\main.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;		None               void
   558 ;; Registers used:
   559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 17F/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         0       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0
   568 ;;      Totals:         0       0       0       0       0
   569 ;;Total ram usage:        0 bytes
   570 ;; Hardware stack levels required when called:    4
   571 ;; This function calls:
   572 ;;		_ADC_Init
   573 ;;		_TIMER1_Init
   574 ;;		_TIMER1_Set
   575 ;;		_USART_Init
   576 ;;		_USART_WriteString
   577 ;; This function is called by:
   578 ;;		Startup code after reset
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _main
   584  01B4                     _main:	
   585                           
   586                           ;main.c: 58: TRISA = 0b00000011;
   587                           
   588                           ;incstack = 0
   589                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   590  01B4  3003               	movlw	3
   591  01B5  1683               	bsf	3,5	;RP0=1, select bank1
   592  01B6  1303               	bcf	3,6	;RP1=0, select bank1
   593  01B7  0085               	movwf	5	;volatile
   594                           
   595                           ;main.c: 59: PORTA = 0b00000011;
   596  01B8  3003               	movlw	3
   597  01B9  1283               	bcf	3,5	;RP0=0, select bank0
   598  01BA  1303               	bcf	3,6	;RP1=0, select bank0
   599  01BB  0085               	movwf	5	;volatile
   600                           
   601                           ;main.c: 60: TRISB = 0b00000000;
   602  01BC  1683               	bsf	3,5	;RP0=1, select bank1
   603  01BD  1303               	bcf	3,6	;RP1=0, select bank1
   604  01BE  0186               	clrf	6	;volatile
   605                           
   606                           ;main.c: 61: PORTB = 0b00000000;
   607  01BF  1283               	bcf	3,5	;RP0=0, select bank0
   608  01C0  1303               	bcf	3,6	;RP1=0, select bank0
   609  01C1  0186               	clrf	6	;volatile
   610                           
   611                           ;main.c: 62: TRISC = 0b10000000;
   612  01C2  3080               	movlw	128
   613  01C3  1683               	bsf	3,5	;RP0=1, select bank1
   614  01C4  1303               	bcf	3,6	;RP1=0, select bank1
   615  01C5  0087               	movwf	7	;volatile
   616                           
   617                           ;main.c: 63: PORTC = 0b11000000;
   618  01C6  30C0               	movlw	192
   619  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   620  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   621  01C9  0087               	movwf	7	;volatile
   622                           
   623                           ;main.c: 66: USART_Init(115200);
   624  01CA  3000               	movlw	0
   625  01CB  00B2               	movwf	USART_Init@BaudRate+3
   626  01CC  3001               	movlw	1
   627  01CD  00B1               	movwf	USART_Init@BaudRate+2
   628  01CE  30C2               	movlw	194
   629  01CF  00B0               	movwf	USART_Init@BaudRate+1
   630  01D0  3000               	movlw	0
   631  01D1  00AF               	movwf	USART_Init@BaudRate
   632  01D2  120A  118A  2125  120A  118A  	fcall	_USART_Init
   633                           
   634                           ;main.c: 67: TIMER1_Init();
   635  01D7  120A  118A  223F  120A  118A  	fcall	_TIMER1_Init
   636                           
   637                           ;main.c: 68: ADC_Init();
   638  01DC  120A  118A  222D  120A  118A  	fcall	_ADC_Init
   639                           
   640                           ;main.c: 71: TIMER1_Set(7936);
   641  01E1  3000               	movlw	0
   642  01E2  1283               	bcf	3,5	;RP0=0, select bank0
   643  01E3  1303               	bcf	3,6	;RP1=0, select bank0
   644  01E4  00A0               	movwf	TIMER1_Set@count
   645  01E5  301F               	movlw	31
   646  01E6  00A1               	movwf	TIMER1_Set@count+1
   647  01E7  120A  118A  224E  120A  118A  	fcall	_TIMER1_Set
   648                           
   649                           ;main.c: 74: INTCONbits.PEIE = 1;
   650  01EC  170B               	bsf	11,6	;volatile
   651                           
   652                           ;main.c: 75: INTCONbits.GIE = 1;
   653  01ED  178B               	bsf	11,7	;volatile
   654                           
   655                           ;main.c: 77: USART_WriteString("Inicializando USART...");
   656  01EE  3029               	movlw	(STR_1-__stringbase)& (0+255)
   657  01EF  120A  118A  21F5  120A  118A  	fcall	_USART_WriteString
   658  01F4                     l48:	
   659                           ;main.c: 79: while(1)
   660                           
   661                           
   662                           ;main.c: 80: {
   663  01F4  29F4               	goto	l48
   664  01F5                     __end_of_main:	
   665                           
   666                           	psect	text1
   667  01F5                     __ptext1:	
   668 ;; *************** function _USART_WriteString *****************
   669 ;; Defined at:
   670 ;;		line 48 in file "C:\Users\Ninguem\Desktop\Trabalho final embarcado\supervv\Firmware\usart.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;  str             1    wreg     PTR const unsigned char 
   673 ;;		 -> STR_2(40), STR_1(23), 
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  str             1    2[BANK0 ] PTR const unsigned char 
   676 ;;		 -> STR_2(40), STR_1(23), 
   677 ;; Return value:  Size  Location     Type
   678 ;;		None               void
   679 ;; Registers used:
   680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   686 ;;      Params:         0       0       0       0       0
   687 ;;      Locals:         0       1       0       0       0
   688 ;;      Temps:          0       1       0       0       0
   689 ;;      Totals:         0       2       0       0       0
   690 ;;Total ram usage:        2 bytes
   691 ;; Hardware stack levels used:    1
   692 ;; Hardware stack levels required when called:    3
   693 ;; This function calls:
   694 ;;		_USART_WriteChar
   695 ;; This function is called by:
   696 ;;		_main
   697 ;;		_USART_ReceiveChar
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           
   702                           ;psect for function _USART_WriteString
   703  01F5                     _USART_WriteString:	
   704                           
   705                           ;incstack = 0
   706                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   707                           ;USART_WriteString@str stored from wreg
   708  01F5  1283               	bcf	3,5	;RP0=0, select bank0
   709  01F6  1303               	bcf	3,6	;RP1=0, select bank0
   710  01F7  00A2               	movwf	USART_WriteString@str
   711  01F8                     l895:	
   712                           ;usart.c: 51: while(*str != '\0')
   713                           
   714  01F8  0822               	movf	USART_WriteString@str,w
   715  01F9  0084               	movwf	4
   716  01FA  120A  118A  216F  120A  118A  	fcall	stringdir
   717  01FF  3800               	iorlw	0
   718  0200  1903               	btfsc	3,2
   719  0201  0008               	return
   720                           
   721                           ;usart.c: 52: {
   722                           ;usart.c: 54: USART_WriteChar(*str);
   723  0202  0822               	movf	USART_WriteString@str,w
   724  0203  0084               	movwf	4
   725  0204  120A  118A  216F  120A  118A  	fcall	stringdir
   726  0209  120A  118A  2260  120A  118A  	fcall	_USART_WriteChar
   727                           
   728                           ;usart.c: 55: str++;
   729  020E  3001               	movlw	1
   730  020F  1283               	bcf	3,5	;RP0=0, select bank0
   731  0210  1303               	bcf	3,6	;RP1=0, select bank0
   732  0211  00A1               	movwf	??_USART_WriteString
   733  0212  0821               	movf	??_USART_WriteString,w
   734  0213  07A2               	addwf	USART_WriteString@str,f
   735  0214  29F8               	goto	l895
   736  0215                     __end_of_USART_WriteString:	
   737                           
   738                           	psect	text2
   739  0260                     __ptext2:	
   740 ;; *************** function _USART_WriteChar *****************
   741 ;; Defined at:
   742 ;;		line 42 in file "C:\Users\Ninguem\Desktop\Trabalho final embarcado\supervv\Firmware\usart.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  USART_Data      1    wreg     unsigned char 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  USART_Data      1    0[BANK0 ] unsigned char 
   747 ;; Return value:  Size  Location     Type
   748 ;;		None               void
   749 ;; Registers used:
   750 ;;		wreg
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         0       0       0       0       0
   757 ;;      Locals:         0       1       0       0       0
   758 ;;      Temps:          0       0       0       0       0
   759 ;;      Totals:         0       1       0       0       0
   760 ;;Total ram usage:        1 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:    2
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_USART_WriteString
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           
   771                           ;psect for function _USART_WriteChar
   772  0260                     _USART_WriteChar:	
   773                           
   774                           ;incstack = 0
   775                           ; Regs used in _USART_WriteChar: [wreg]
   776                           ;USART_WriteChar@USART_Data stored from wreg
   777  0260  1283               	bcf	3,5	;RP0=0, select bank0
   778  0261  1303               	bcf	3,6	;RP1=0, select bank0
   779  0262  00A0               	movwf	USART_WriteChar@USART_Data
   780  0263                     l75:	
   781                           ;usart.c: 44: while(!PIR1bits.TXIF);
   782                           
   783  0263  1E0C               	btfss	12,4	;volatile
   784  0264  2A63               	goto	l75
   785                           
   786                           ;usart.c: 45: TXREG = USART_Data;
   787  0265  0820               	movf	USART_WriteChar@USART_Data,w
   788  0266  0099               	movwf	25	;volatile
   789  0267  0008               	return
   790  0268                     __end_of_USART_WriteChar:	
   791                           
   792                           	psect	text3
   793  0125                     __ptext3:	
   794 ;; *************** function _USART_Init *****************
   795 ;; Defined at:
   796 ;;		line 6 in file "C:\Users\Ninguem\Desktop\Trabalho final embarcado\supervv\Firmware\usart.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  BaudRate        4   15[BANK0 ] long 
   799 ;; Auto vars:     Size  Location     Type
   800 ;;  BR              1   24[BANK0 ] unsigned char 
   801 ;; Return value:  Size  Location     Type
   802 ;;		None               void
   803 ;; Registers used:
   804 ;;		wreg, status,2, status,0, pclath, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   810 ;;      Params:         0       4       0       0       0
   811 ;;      Locals:         0       1       0       0       0
   812 ;;      Temps:          0       5       0       0       0
   813 ;;      Totals:         0      10       0       0       0
   814 ;;Total ram usage:       10 bytes
   815 ;; Hardware stack levels used:    1
   816 ;; Hardware stack levels required when called:    3
   817 ;; This function calls:
   818 ;;		___aldiv
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           
   825                           ;psect for function _USART_Init
   826  0125                     _USART_Init:	
   827                           
   828                           ;usart.c: 12: unsigned char BR = 0;
   829                           
   830                           ;incstack = 0
   831                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
   832  0125  1283               	bcf	3,5	;RP0=0, select bank0
   833  0126  1303               	bcf	3,6	;RP1=0, select bank0
   834  0127  01B8               	clrf	USART_Init@BR
   835                           
   836                           ;usart.c: 15: BR = (18432000 / (16 * BaudRate)) - 1;
   837  0128  082F               	movf	USART_Init@BaudRate,w
   838  0129  00B3               	movwf	??_USART_Init
   839  012A  0830               	movf	USART_Init@BaudRate+1,w
   840  012B  00B4               	movwf	??_USART_Init+1
   841  012C  0831               	movf	USART_Init@BaudRate+2,w
   842  012D  00B5               	movwf	??_USART_Init+2
   843  012E  0832               	movf	USART_Init@BaudRate+3,w
   844  012F  00B6               	movwf	??_USART_Init+3
   845  0130  3004               	movlw	4
   846  0131                     u335:	
   847  0131  1003               	clrc
   848  0132  0DB3               	rlf	??_USART_Init,f
   849  0133  0DB4               	rlf	??_USART_Init+1,f
   850  0134  0DB5               	rlf	??_USART_Init+2,f
   851  0135  0DB6               	rlf	??_USART_Init+3,f
   852  0136  3EFF               	addlw	-1
   853  0137  1D03               	skipz
   854  0138  2931               	goto	u335
   855  0139  0836               	movf	??_USART_Init+3,w
   856  013A  00A3               	movwf	___aldiv@divisor+3
   857  013B  0835               	movf	??_USART_Init+2,w
   858  013C  00A2               	movwf	___aldiv@divisor+2
   859  013D  0834               	movf	??_USART_Init+1,w
   860  013E  00A1               	movwf	___aldiv@divisor+1
   861  013F  0833               	movf	??_USART_Init,w
   862  0140  00A0               	movwf	___aldiv@divisor
   863  0141  3001               	movlw	1
   864  0142  00A7               	movwf	___aldiv@dividend+3
   865  0143  3019               	movlw	25
   866  0144  00A6               	movwf	___aldiv@dividend+2
   867  0145  3040               	movlw	64
   868  0146  00A5               	movwf	___aldiv@dividend+1
   869  0147  3000               	movlw	0
   870  0148  00A4               	movwf	___aldiv@dividend
   871  0149  120A  118A  2021   	fcall	___aldiv
   872  014C  1283               	bcf	3,5	;RP0=0, select bank0
   873  014D  1303               	bcf	3,6	;RP1=0, select bank0
   874  014E  0820               	movf	?___aldiv,w
   875  014F  3EFF               	addlw	255
   876  0150  00B7               	movwf	??_USART_Init+4
   877  0151  0837               	movf	??_USART_Init+4,w
   878  0152  00B8               	movwf	USART_Init@BR
   879                           
   880                           ;usart.c: 16: SPBRG = BR;
   881  0153  0838               	movf	USART_Init@BR,w
   882  0154  1683               	bsf	3,5	;RP0=1, select bank1
   883  0155  1303               	bcf	3,6	;RP1=0, select bank1
   884  0156  0099               	movwf	25	;volatile
   885                           
   886                           ;usart.c: 19: TXSTAbits.CSRC = 0;
   887  0157  1398               	bcf	24,7	;volatile
   888                           
   889                           ;usart.c: 20: TXSTAbits.TX9 = 0;
   890  0158  1318               	bcf	24,6	;volatile
   891                           
   892                           ;usart.c: 21: TXSTAbits.TXEN = 1;
   893  0159  1698               	bsf	24,5	;volatile
   894                           
   895                           ;usart.c: 22: TXSTAbits.SYNC = 0;
   896  015A  1218               	bcf	24,4	;volatile
   897                           
   898                           ;usart.c: 23: TXSTAbits.BRGH = 1;
   899  015B  1518               	bsf	24,2	;volatile
   900                           
   901                           ;usart.c: 24: TXSTAbits.TRMT = 1;
   902  015C  1498               	bsf	24,1	;volatile
   903                           
   904                           ;usart.c: 25: TXSTAbits.TX9D = 0;
   905  015D  1018               	bcf	24,0	;volatile
   906                           
   907                           ;usart.c: 28: RCSTAbits.SPEN = 1;
   908  015E  1283               	bcf	3,5	;RP0=0, select bank0
   909  015F  1303               	bcf	3,6	;RP1=0, select bank0
   910  0160  1798               	bsf	24,7	;volatile
   911                           
   912                           ;usart.c: 29: RCSTAbits.RX9 = 0;
   913  0161  1318               	bcf	24,6	;volatile
   914                           
   915                           ;usart.c: 30: RCSTAbits.SREN = 0;
   916  0162  1298               	bcf	24,5	;volatile
   917                           
   918                           ;usart.c: 31: RCSTAbits.CREN = 1;
   919  0163  1618               	bsf	24,4	;volatile
   920                           
   921                           ;usart.c: 32: RCSTAbits.ADDEN = 0;
   922  0164  1198               	bcf	24,3	;volatile
   923                           
   924                           ;usart.c: 33: RCSTAbits.FERR = 0;
   925  0165  1118               	bcf	24,2	;volatile
   926                           
   927                           ;usart.c: 34: RCSTAbits.OERR = 0;
   928  0166  1098               	bcf	24,1	;volatile
   929                           
   930                           ;usart.c: 35: RCSTAbits.RX9D = 0;
   931  0167  1018               	bcf	24,0	;volatile
   932                           
   933                           ;usart.c: 38: PIE1bits.RCIE = 1;
   934  0168  1683               	bsf	3,5	;RP0=1, select bank1
   935  0169  1303               	bcf	3,6	;RP1=0, select bank1
   936  016A  168C               	bsf	12,5	;volatile
   937                           
   938                           ;usart.c: 39: PIR1bits.RCIF = 0;
   939  016B  1283               	bcf	3,5	;RP0=0, select bank0
   940  016C  1303               	bcf	3,6	;RP1=0, select bank0
   941  016D  128C               	bcf	12,5	;volatile
   942  016E  0008               	return
   943  016F                     __end_of_USART_Init:	
   944                           
   945                           	psect	text4
   946  0021                     __ptext4:	
   947 ;; *************** function ___aldiv *****************
   948 ;; Defined at:
   949 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  divisor         4    0[BANK0 ] long 
   952 ;;  dividend        4    4[BANK0 ] long 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;  quotient        4   11[BANK0 ] long 
   955 ;;  sign            1   10[BANK0 ] unsigned char 
   956 ;;  counter         1    9[BANK0 ] unsigned char 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  4    0[BANK0 ] long 
   959 ;; Registers used:
   960 ;;		wreg, status,2, status,0
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   966 ;;      Params:         0       8       0       0       0
   967 ;;      Locals:         0       6       0       0       0
   968 ;;      Temps:          0       1       0       0       0
   969 ;;      Totals:         0      15       0       0       0
   970 ;;Total ram usage:       15 bytes
   971 ;; Hardware stack levels used:    1
   972 ;; Hardware stack levels required when called:    2
   973 ;; This function calls:
   974 ;;		Nothing
   975 ;; This function is called by:
   976 ;;		_USART_Init
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           
   981                           ;psect for function ___aldiv
   982  0021                     ___aldiv:	
   983                           
   984                           ;incstack = 0
   985                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   986  0021  1283               	bcf	3,5	;RP0=0, select bank0
   987  0022  1303               	bcf	3,6	;RP1=0, select bank0
   988  0023  01AA               	clrf	___aldiv@sign
   989  0024  1FA3               	btfss	___aldiv@divisor+3,7
   990  0025  2833               	goto	l273
   991  0026  09A0               	comf	___aldiv@divisor,f
   992  0027  09A1               	comf	___aldiv@divisor+1,f
   993  0028  09A2               	comf	___aldiv@divisor+2,f
   994  0029  09A3               	comf	___aldiv@divisor+3,f
   995  002A  0AA0               	incf	___aldiv@divisor,f
   996  002B  1903               	skipnz
   997  002C  0AA1               	incf	___aldiv@divisor+1,f
   998  002D  1903               	skipnz
   999  002E  0AA2               	incf	___aldiv@divisor+2,f
  1000  002F  1903               	skipnz
  1001  0030  0AA3               	incf	___aldiv@divisor+3,f
  1002  0031  01AA               	clrf	___aldiv@sign
  1003  0032  0AAA               	incf	___aldiv@sign,f
  1004  0033                     l273:	
  1005  0033  1FA7               	btfss	___aldiv@dividend+3,7
  1006  0034  2844               	goto	l805
  1007  0035  09A4               	comf	___aldiv@dividend,f
  1008  0036  09A5               	comf	___aldiv@dividend+1,f
  1009  0037  09A6               	comf	___aldiv@dividend+2,f
  1010  0038  09A7               	comf	___aldiv@dividend+3,f
  1011  0039  0AA4               	incf	___aldiv@dividend,f
  1012  003A  1903               	skipnz
  1013  003B  0AA5               	incf	___aldiv@dividend+1,f
  1014  003C  1903               	skipnz
  1015  003D  0AA6               	incf	___aldiv@dividend+2,f
  1016  003E  1903               	skipnz
  1017  003F  0AA7               	incf	___aldiv@dividend+3,f
  1018  0040  3001               	movlw	1
  1019  0041  00A8               	movwf	??___aldiv
  1020  0042  0828               	movf	??___aldiv,w
  1021  0043  06AA               	xorwf	___aldiv@sign,f
  1022  0044                     l805:	
  1023  0044  3000               	movlw	0
  1024  0045  00AE               	movwf	___aldiv@quotient+3
  1025  0046  3000               	movlw	0
  1026  0047  00AD               	movwf	___aldiv@quotient+2
  1027  0048  3000               	movlw	0
  1028  0049  00AC               	movwf	___aldiv@quotient+1
  1029  004A  3000               	movlw	0
  1030  004B  00AB               	movwf	___aldiv@quotient
  1031  004C  0823               	movf	___aldiv@divisor+3,w
  1032  004D  0422               	iorwf	___aldiv@divisor+2,w
  1033  004E  0421               	iorwf	___aldiv@divisor+1,w
  1034  004F  0420               	iorwf	___aldiv@divisor,w
  1035  0050  1903               	skipnz
  1036  0051  2899               	goto	l827
  1037  0052  01A9               	clrf	___aldiv@counter
  1038  0053  0AA9               	incf	___aldiv@counter,f
  1039  0054                     l813:	
  1040  0054  1BA3               	btfsc	___aldiv@divisor+3,7
  1041  0055  2864               	goto	l815
  1042  0056  3001               	movlw	1
  1043  0057  00A8               	movwf	??___aldiv
  1044  0058                     u255:	
  1045  0058  1003               	clrc
  1046  0059  0DA0               	rlf	___aldiv@divisor,f
  1047  005A  0DA1               	rlf	___aldiv@divisor+1,f
  1048  005B  0DA2               	rlf	___aldiv@divisor+2,f
  1049  005C  0DA3               	rlf	___aldiv@divisor+3,f
  1050  005D  0BA8               	decfsz	??___aldiv,f
  1051  005E  2858               	goto	u255
  1052  005F  3001               	movlw	1
  1053  0060  00A8               	movwf	??___aldiv
  1054  0061  0828               	movf	??___aldiv,w
  1055  0062  07A9               	addwf	___aldiv@counter,f
  1056  0063  2854               	goto	l813
  1057  0064                     l815:	
  1058  0064  3001               	movlw	1
  1059  0065  00A8               	movwf	??___aldiv
  1060  0066                     u275:	
  1061  0066  1003               	clrc
  1062  0067  0DAB               	rlf	___aldiv@quotient,f
  1063  0068  0DAC               	rlf	___aldiv@quotient+1,f
  1064  0069  0DAD               	rlf	___aldiv@quotient+2,f
  1065  006A  0DAE               	rlf	___aldiv@quotient+3,f
  1066  006B  0BA8               	decfsz	??___aldiv,f
  1067  006C  2866               	goto	u275
  1068  006D  0823               	movf	___aldiv@divisor+3,w
  1069  006E  0227               	subwf	___aldiv@dividend+3,w
  1070  006F  1D03               	skipz
  1071  0070  287B               	goto	u285
  1072  0071  0822               	movf	___aldiv@divisor+2,w
  1073  0072  0226               	subwf	___aldiv@dividend+2,w
  1074  0073  1D03               	skipz
  1075  0074  287B               	goto	u285
  1076  0075  0821               	movf	___aldiv@divisor+1,w
  1077  0076  0225               	subwf	___aldiv@dividend+1,w
  1078  0077  1D03               	skipz
  1079  0078  287B               	goto	u285
  1080  0079  0820               	movf	___aldiv@divisor,w
  1081  007A  0224               	subwf	___aldiv@dividend,w
  1082  007B                     u285:	
  1083  007B  1C03               	skipc
  1084  007C  288C               	goto	l823
  1085  007D  0820               	movf	___aldiv@divisor,w
  1086  007E  02A4               	subwf	___aldiv@dividend,f
  1087  007F  0821               	movf	___aldiv@divisor+1,w
  1088  0080  1C03               	skipc
  1089  0081  0F21               	incfsz	___aldiv@divisor+1,w
  1090  0082  02A5               	subwf	___aldiv@dividend+1,f
  1091  0083  0822               	movf	___aldiv@divisor+2,w
  1092  0084  1C03               	skipc
  1093  0085  0F22               	incfsz	___aldiv@divisor+2,w
  1094  0086  02A6               	subwf	___aldiv@dividend+2,f
  1095  0087  0823               	movf	___aldiv@divisor+3,w
  1096  0088  1C03               	skipc
  1097  0089  0F23               	incfsz	___aldiv@divisor+3,w
  1098  008A  02A7               	subwf	___aldiv@dividend+3,f
  1099  008B  142B               	bsf	___aldiv@quotient,0
  1100  008C                     l823:	
  1101  008C  3001               	movlw	1
  1102  008D                     u295:	
  1103  008D  1003               	clrc
  1104  008E  0CA3               	rrf	___aldiv@divisor+3,f
  1105  008F  0CA2               	rrf	___aldiv@divisor+2,f
  1106  0090  0CA1               	rrf	___aldiv@divisor+1,f
  1107  0091  0CA0               	rrf	___aldiv@divisor,f
  1108  0092  3EFF               	addlw	-1
  1109  0093  1D03               	skipz
  1110  0094  288D               	goto	u295
  1111  0095  3001               	movlw	1
  1112  0096  02A9               	subwf	___aldiv@counter,f
  1113  0097  1D03               	btfss	3,2
  1114  0098  2864               	goto	l815
  1115  0099                     l827:	
  1116  0099  082A               	movf	___aldiv@sign,w
  1117  009A  1903               	btfsc	3,2
  1118  009B  28A7               	goto	l831
  1119  009C  09AB               	comf	___aldiv@quotient,f
  1120  009D  09AC               	comf	___aldiv@quotient+1,f
  1121  009E  09AD               	comf	___aldiv@quotient+2,f
  1122  009F  09AE               	comf	___aldiv@quotient+3,f
  1123  00A0  0AAB               	incf	___aldiv@quotient,f
  1124  00A1  1903               	skipnz
  1125  00A2  0AAC               	incf	___aldiv@quotient+1,f
  1126  00A3  1903               	skipnz
  1127  00A4  0AAD               	incf	___aldiv@quotient+2,f
  1128  00A5  1903               	skipnz
  1129  00A6  0AAE               	incf	___aldiv@quotient+3,f
  1130  00A7                     l831:	
  1131  00A7  082E               	movf	___aldiv@quotient+3,w
  1132  00A8  00A3               	movwf	?___aldiv+3
  1133  00A9  082D               	movf	___aldiv@quotient+2,w
  1134  00AA  00A2               	movwf	?___aldiv+2
  1135  00AB  082C               	movf	___aldiv@quotient+1,w
  1136  00AC  00A1               	movwf	?___aldiv+1
  1137  00AD  082B               	movf	___aldiv@quotient,w
  1138  00AE  00A0               	movwf	?___aldiv
  1139  00AF  0008               	return
  1140  00B0                     __end_of___aldiv:	
  1141                           
  1142                           	psect	text5
  1143  024E                     __ptext5:	
  1144 ;; *************** function _TIMER1_Set *****************
  1145 ;; Defined at:
  1146 ;;		line 36 in file "C:\Users\Ninguem\Desktop\Trabalho final embarcado\supervv\Firmware\timers.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;  count           2    0[BANK0 ] unsigned int 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;		None               void
  1153 ;; Registers used:
  1154 ;;		wreg, status,2, status,0
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1160 ;;      Params:         0       2       0       0       0
  1161 ;;      Locals:         0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0
  1163 ;;      Totals:         0       2       0       0       0
  1164 ;;Total ram usage:        2 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    2
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _TIMER1_Set
  1176  024E                     _TIMER1_Set:	
  1177                           
  1178                           ;timers.c: 38: TMR1 = count;
  1179                           
  1180                           ;incstack = 0
  1181                           ; Regs used in _TIMER1_Set: [wreg+status,2+status,0]
  1182  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1183  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1184  0250  0821               	movf	TIMER1_Set@count+1,w
  1185  0251  018F               	clrf	15	;volatile
  1186  0252  078F               	addwf	15,f	;volatile
  1187  0253  0820               	movf	TIMER1_Set@count,w
  1188  0254  018E               	clrf	14	;volatile
  1189  0255  078E               	addwf	14,f	;volatile
  1190  0256  0008               	return
  1191  0257                     __end_of_TIMER1_Set:	
  1192                           
  1193                           	psect	text6
  1194  023F                     __ptext6:	
  1195 ;; *************** function _TIMER1_Init *****************
  1196 ;; Defined at:
  1197 ;;		line 23 in file "C:\Users\Ninguem\Desktop\Trabalho final embarcado\supervv\Firmware\timers.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;		None               void
  1204 ;; Registers used:
  1205 ;;		None
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1211 ;;      Params:         0       0       0       0       0
  1212 ;;      Locals:         0       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0
  1214 ;;      Totals:         0       0       0       0       0
  1215 ;;Total ram usage:        0 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; Hardware stack levels required when called:    2
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_main
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           
  1226                           ;psect for function _TIMER1_Init
  1227  023F                     _TIMER1_Init:	
  1228                           
  1229                           ;timers.c: 26: T1CONbits.T1CKPS1 = 1;
  1230                           
  1231                           ;incstack = 0
  1232                           ; Regs used in _TIMER1_Init: []
  1233  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1234  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0241  1690               	bsf	16,5	;volatile
  1236                           
  1237                           ;timers.c: 27: T1CONbits.T1CKPS0 = 1;
  1238  0242  1610               	bsf	16,4	;volatile
  1239                           
  1240                           ;timers.c: 28: T1CONbits.T1OSCEN = 0;
  1241  0243  1190               	bcf	16,3	;volatile
  1242                           
  1243                           ;timers.c: 29: T1CONbits.nT1SYNC = 1;
  1244  0244  1510               	bsf	16,2	;volatile
  1245                           
  1246                           ;timers.c: 30: T1CONbits.TMR1CS = 0;
  1247  0245  1090               	bcf	16,1	;volatile
  1248                           
  1249                           ;timers.c: 31: T1CONbits.TMR1ON = 1;
  1250  0246  1410               	bsf	16,0	;volatile
  1251                           
  1252                           ;timers.c: 32: PIE1bits.TMR1IE = 1;
  1253  0247  1683               	bsf	3,5	;RP0=1, select bank1
  1254  0248  1303               	bcf	3,6	;RP1=0, select bank1
  1255  0249  140C               	bsf	12,0	;volatile
  1256                           
  1257                           ;timers.c: 33: PIR1bits.TMR1IF = 0;
  1258  024A  1283               	bcf	3,5	;RP0=0, select bank0
  1259  024B  1303               	bcf	3,6	;RP1=0, select bank0
  1260  024C  100C               	bcf	12,0	;volatile
  1261  024D  0008               	return
  1262  024E                     __end_of_TIMER1_Init:	
  1263                           
  1264                           	psect	text7
  1265  022D                     __ptext7:	
  1266 ;; *************** function _ADC_Init *****************
  1267 ;; Defined at:
  1268 ;;		line 6 in file "C:\Users\Ninguem\Desktop\Trabalho final embarcado\supervv\Firmware\adc.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;		None               void
  1275 ;; Registers used:
  1276 ;;		None
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1282 ;;      Params:         0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0
  1285 ;;      Totals:         0       0       0       0       0
  1286 ;;Total ram usage:        0 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; Hardware stack levels required when called:    2
  1289 ;; This function calls:
  1290 ;;		Nothing
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           
  1297                           ;psect for function _ADC_Init
  1298  022D                     _ADC_Init:	
  1299                           
  1300                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  1301                           
  1302                           ;incstack = 0
  1303                           ; Regs used in _ADC_Init: []
  1304  022D  1683               	bsf	3,5	;RP0=1, select bank1
  1305  022E  1303               	bcf	3,6	;RP1=0, select bank1
  1306  022F  179F               	bsf	31,7	;volatile
  1307                           
  1308                           ;adc.c: 10: ADCON1bits.PCFG3 = 0;
  1309  0230  119F               	bcf	31,3	;volatile
  1310                           
  1311                           ;adc.c: 11: ADCON1bits.PCFG2 = 0;
  1312  0231  111F               	bcf	31,2	;volatile
  1313                           
  1314                           ;adc.c: 12: ADCON1bits.PCFG1 = 0;
  1315  0232  109F               	bcf	31,1	;volatile
  1316                           
  1317                           ;adc.c: 13: ADCON1bits.PCFG0 = 0;
  1318  0233  101F               	bcf	31,0	;volatile
  1319                           
  1320                           ;adc.c: 17: ADCON0bits.ADCS1 = 1;
  1321  0234  1283               	bcf	3,5	;RP0=0, select bank0
  1322  0235  1303               	bcf	3,6	;RP1=0, select bank0
  1323  0236  179F               	bsf	31,7	;volatile
  1324                           
  1325                           ;adc.c: 18: ADCON0bits.ADCS0 = 0;
  1326  0237  131F               	bcf	31,6	;volatile
  1327                           
  1328                           ;adc.c: 21: PIE1bits.ADIE = 0;
  1329  0238  1683               	bsf	3,5	;RP0=1, select bank1
  1330  0239  1303               	bcf	3,6	;RP1=0, select bank1
  1331  023A  130C               	bcf	12,6	;volatile
  1332                           
  1333                           ;adc.c: 22: PIR1bits.ADIF = 0;
  1334  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1335  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1336  023D  130C               	bcf	12,6	;volatile
  1337  023E  0008               	return
  1338  023F                     __end_of_ADC_Init:	
  1339                           
  1340                           	psect	text8
  1341  00B0                     __ptext8:	
  1342 ;; *************** function _ISR *****************
  1343 ;; Defined at:
  1344 ;;		line 13 in file "C:\Users\Ninguem\Desktop\Trabalho final embarcado\supervv\Firmware\main.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  index           1    9[COMMON] unsigned char 
  1349 ;;  checksum        1    8[COMMON] unsigned char 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;		None               void
  1352 ;; Registers used:
  1353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1359 ;;      Params:         0       0       0       0       0
  1360 ;;      Locals:         2       0       0       0       0
  1361 ;;      Temps:          5       0       0       0       0
  1362 ;;      Totals:         7       0       0       0       0
  1363 ;;Total ram usage:        7 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    1
  1366 ;; This function calls:
  1367 ;;		_ADC_Read
  1368 ;;		i1_TIMER1_Set
  1369 ;;		i1_USART_WriteChar
  1370 ;; This function is called by:
  1371 ;;		Interrupt level 1
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           
  1376                           ;psect for function _ISR
  1377  00B0                     _ISR:	
  1378                           
  1379                           ;main.c: 16: if(PIR1bits.TMR1IF)
  1380  00B0  1C0C               	btfss	12,0	;volatile
  1381  00B1  2918               	goto	i1l45
  1382                           
  1383                           ;main.c: 17: {
  1384                           ;main.c: 18: PIR1bits.TMR1IF = 0;
  1385  00B2  100C               	bcf	12,0	;volatile
  1386                           
  1387                           ;main.c: 20: TIMER1_Set(7936);
  1388  00B3  3000               	movlw	0
  1389  00B4  00F0               	movwf	i1TIMER1_Set@count
  1390  00B5  301F               	movlw	31
  1391  00B6  00F1               	movwf	i1TIMER1_Set@count+1
  1392  00B7  120A  118A  2257  120A  118A  	fcall	i1_TIMER1_Set
  1393                           
  1394                           ;main.c: 23: contador++;
  1395  00BC  3001               	movlw	1
  1396  00BD  07FA               	addwf	_contador,f
  1397  00BE  1803               	skipnc
  1398  00BF  0AFB               	incf	_contador+1,f
  1399  00C0  3000               	movlw	0
  1400  00C1  07FB               	addwf	_contador+1,f
  1401                           
  1402                           ;main.c: 25: if(contador == 1)
  1403  00C2  3001               	movlw	1
  1404  00C3  067A               	xorwf	_contador,w
  1405  00C4  047B               	iorwf	_contador+1,w
  1406  00C5  1D03               	skipz
  1407  00C6  2918               	goto	i1l45
  1408                           
  1409                           ;main.c: 26: {
  1410                           ;main.c: 28: ADC_Read(0);
  1411  00C7  3000               	movlw	0
  1412  00C8  00F0               	movwf	ADC_Read@channel
  1413  00C9  3000               	movlw	0
  1414  00CA  00F1               	movwf	ADC_Read@channel+1
  1415  00CB  120A  118A  2215  120A  118A  	fcall	_ADC_Read
  1416                           
  1417                           ;main.c: 29: ADC_Buffer[0] = '#';
  1418  00D0  3023               	movlw	35
  1419  00D1  00F3               	movwf	??_ISR
  1420  00D2  0873               	movf	??_ISR,w
  1421  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1422  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1423  00D5  00B9               	movwf	_ADC_Buffer
  1424                           
  1425                           ;main.c: 30: ADC_Buffer[1] = '$';
  1426  00D6  3024               	movlw	36
  1427  00D7  00F3               	movwf	??_ISR
  1428  00D8  0873               	movf	??_ISR,w
  1429  00D9  00BA               	movwf	_ADC_Buffer+1
  1430                           
  1431                           ;main.c: 31: ADC_Buffer[2] = ':';
  1432  00DA  303A               	movlw	58
  1433  00DB  00F3               	movwf	??_ISR
  1434  00DC  0873               	movf	??_ISR,w
  1435  00DD  00BB               	movwf	_ADC_Buffer+2
  1436                           
  1437                           ;main.c: 32: ADC_Buffer[3] = ADRESH;
  1438  00DE  081E               	movf	30,w	;volatile
  1439  00DF  00F3               	movwf	??_ISR
  1440  00E0  0873               	movf	??_ISR,w
  1441  00E1  00BC               	movwf	_ADC_Buffer+3
  1442                           
  1443                           ;main.c: 33: ADC_Buffer[4] = ADRESL;
  1444  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  1445  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  1446  00E4  081E               	movf	30,w	;volatile
  1447  00E5  00F3               	movwf	??_ISR
  1448  00E6  0873               	movf	??_ISR,w
  1449  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  1450  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  1451  00E9  00BD               	movwf	_ADC_Buffer+4
  1452                           
  1453                           ;main.c: 36: unsigned char checksum = 0x00;
  1454  00EA  01F8               	clrf	ISR@checksum
  1455                           
  1456                           ;main.c: 37: for(unsigned char index = 0; index < 5; index++)
  1457  00EB  01F9               	clrf	ISR@index
  1458  00EC  3005               	movlw	5
  1459  00ED  0279               	subwf	ISR@index,w
  1460  00EE  1803               	btfsc	3,0
  1461  00EF  290A               	goto	i1l941
  1462  00F0                     i1l933:	
  1463                           
  1464                           ;main.c: 38: {
  1465                           ;main.c: 39: USART_WriteChar(ADC_Buffer[index]);
  1466  00F0  0879               	movf	ISR@index,w
  1467  00F1  3E39               	addlw	_ADC_Buffer& (0+255)
  1468  00F2  0084               	movwf	4
  1469  00F3  1383               	bcf	3,7	;select IRP bank0
  1470  00F4  0800               	movf	0,w
  1471  00F5  120A  118A  2268  120A  118A  	fcall	i1_USART_WriteChar
  1472                           
  1473                           ;main.c: 42: checksum ^= ADC_Buffer[index];
  1474  00FA  0879               	movf	ISR@index,w
  1475  00FB  3E39               	addlw	_ADC_Buffer& (0+255)
  1476  00FC  0084               	movwf	4
  1477  00FD  1383               	bcf	3,7	;select IRP bank0
  1478  00FE  0800               	movf	0,w
  1479  00FF  00F3               	movwf	??_ISR
  1480  0100  0873               	movf	??_ISR,w
  1481  0101  06F8               	xorwf	ISR@checksum,f
  1482  0102  3001               	movlw	1
  1483  0103  00F3               	movwf	??_ISR
  1484  0104  0873               	movf	??_ISR,w
  1485  0105  07F9               	addwf	ISR@index,f
  1486  0106  3005               	movlw	5
  1487  0107  0279               	subwf	ISR@index,w
  1488  0108  1C03               	skipc
  1489  0109  28F0               	goto	i1l933
  1490  010A                     i1l941:	
  1491                           
  1492                           ;main.c: 43: }
  1493                           ;main.c: 46: ADC_Buffer[5] = checksum;
  1494  010A  0878               	movf	ISR@checksum,w
  1495  010B  00F3               	movwf	??_ISR
  1496  010C  0873               	movf	??_ISR,w
  1497  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1498  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1499  010F  00BE               	movwf	_ADC_Buffer+5
  1500                           
  1501                           ;main.c: 47: USART_WriteChar(ADC_Buffer[5]);
  1502  0110  083E               	movf	_ADC_Buffer+5,w
  1503  0111  120A  118A  2268  120A  118A  	fcall	i1_USART_WriteChar
  1504                           
  1505                           ;main.c: 50: contador = 0;
  1506  0116  01FA               	clrf	_contador
  1507  0117  01FB               	clrf	_contador+1
  1508  0118                     i1l45:	
  1509  0118  0877               	movf	??_ISR+4,w
  1510  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1511  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1512  011B  00FF               	movwf	127
  1513  011C  0876               	movf	??_ISR+3,w
  1514  011D  008A               	movwf	10
  1515  011E  0875               	movf	??_ISR+2,w
  1516  011F  0084               	movwf	4
  1517  0120  0E74               	swapf	(??_ISR+1)^(0+-128),w
  1518  0121  0083               	movwf	3
  1519  0122  0EFE               	swapf	126,f
  1520  0123  0E7E               	swapf	126,w
  1521  0124  0009               	retfie
  1522  0125                     __end_of_ISR:	
  1523                           
  1524                           	psect	intentry
  1525  0004                     __pintentry:	
  1526                           ;incstack = 0
  1527                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1528                           
  1529  0004                     interrupt_function:	
  1530  007E                     saved_w	set	btemp
  1531  0004  00FE               	movwf	btemp
  1532  0005  0E03               	swapf	3,w
  1533  0006  00F4               	movwf	??_ISR+1
  1534  0007  0804               	movf	4,w
  1535  0008  00F5               	movwf	??_ISR+2
  1536  0009  080A               	movf	10,w
  1537  000A  00F6               	movwf	??_ISR+3
  1538  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1539  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1540  000D  087F               	movf	btemp+1,w
  1541  000E  00F7               	movwf	??_ISR+4
  1542  000F  120A  118A  28B0   	ljmp	_ISR
  1543                           
  1544                           	psect	text9
  1545  0268                     __ptext9:	
  1546 ;; *************** function i1_USART_WriteChar *****************
  1547 ;; Defined at:
  1548 ;;		line 42 in file "C:\Users\Ninguem\Desktop\Trabalho final embarcado\supervv\Firmware\usart.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  USART_Data      1    wreg     unsigned char 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  USART_Data      1    0[COMMON] unsigned char 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;		None               void
  1555 ;; Registers used:
  1556 ;;		wreg
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1562 ;;      Params:         0       0       0       0       0
  1563 ;;      Locals:         1       0       0       0       0
  1564 ;;      Temps:          0       0       0       0       0
  1565 ;;      Totals:         1       0       0       0       0
  1566 ;;Total ram usage:        1 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_ISR
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           
  1576                           ;psect for function i1_USART_WriteChar
  1577  0268                     i1_USART_WriteChar:	
  1578                           
  1579                           ;incstack = 0
  1580                           ; Regs used in i1_USART_WriteChar: [wreg]
  1581                           ;i1USART_WriteChar@USART_Data stored from wreg
  1582  0268  00F0               	movwf	i1USART_WriteChar@USART_Data
  1583  0269                     i1l75:	
  1584                           ;usart.c: 44: while(!PIR1bits.TXIF);
  1585                           
  1586  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1587  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1588  026B  1E0C               	btfss	12,4	;volatile
  1589  026C  2A69               	goto	i1l75
  1590                           
  1591                           ;usart.c: 45: TXREG = USART_Data;
  1592  026D  0870               	movf	i1USART_WriteChar@USART_Data,w
  1593  026E  0099               	movwf	25	;volatile
  1594  026F  0008               	return
  1595  0270                     __end_ofi1_USART_WriteChar:	
  1596                           
  1597                           	psect	text10
  1598  0257                     __ptext10:	
  1599 ;; *************** function i1_TIMER1_Set *****************
  1600 ;; Defined at:
  1601 ;;		line 36 in file "C:\Users\Ninguem\Desktop\Trabalho final embarcado\supervv\Firmware\timers.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  count           2    0[COMMON] unsigned int 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;		None               void
  1608 ;; Registers used:
  1609 ;;		wreg, status,2, status,0
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1615 ;;      Params:         2       0       0       0       0
  1616 ;;      Locals:         0       0       0       0       0
  1617 ;;      Temps:          0       0       0       0       0
  1618 ;;      Totals:         2       0       0       0       0
  1619 ;;Total ram usage:        2 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		_ISR
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           
  1629                           ;psect for function i1_TIMER1_Set
  1630  0257                     i1_TIMER1_Set:	
  1631                           
  1632                           ;timers.c: 38: TMR1 = count;
  1633                           
  1634                           ;incstack = 0
  1635                           ; Regs used in i1_TIMER1_Set: [wreg+status,2+status,0]
  1636  0257  0871               	movf	i1TIMER1_Set@count+1,w
  1637  0258  1283               	bcf	3,5	;RP0=0, select bank0
  1638  0259  1303               	bcf	3,6	;RP1=0, select bank0
  1639  025A  018F               	clrf	15	;volatile
  1640  025B  078F               	addwf	15,f	;volatile
  1641  025C  0870               	movf	i1TIMER1_Set@count,w
  1642  025D  018E               	clrf	14	;volatile
  1643  025E  078E               	addwf	14,f	;volatile
  1644  025F  0008               	return
  1645  0260                     __end_ofi1_TIMER1_Set:	
  1646                           
  1647                           	psect	text11
  1648  0215                     __ptext11:	
  1649 ;; *************** function _ADC_Read *****************
  1650 ;; Defined at:
  1651 ;;		line 25 in file "C:\Users\Ninguem\Desktop\Trabalho final embarcado\supervv\Firmware\adc.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  channel         2    0[COMMON] unsigned short 
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;		None               void
  1658 ;; Registers used:
  1659 ;;		wreg, status,2, status,0
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1665 ;;      Params:         2       0       0       0       0
  1666 ;;      Locals:         0       0       0       0       0
  1667 ;;      Temps:          1       0       0       0       0
  1668 ;;      Totals:         3       0       0       0       0
  1669 ;;Total ram usage:        3 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_ISR
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           
  1679                           ;psect for function _ADC_Read
  1680  0215                     _ADC_Read:	
  1681                           
  1682                           ;adc.c: 27: ADCON0bits.CHS = channel;
  1683                           
  1684                           ;incstack = 0
  1685                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  1686  0215  0870               	movf	ADC_Read@channel,w
  1687  0216  00F2               	movwf	??_ADC_Read
  1688  0217  0DF2               	rlf	??_ADC_Read,f
  1689  0218  0DF2               	rlf	??_ADC_Read,f
  1690  0219  0DF2               	rlf	??_ADC_Read,f
  1691  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1692  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1693  021C  081F               	movf	31,w	;volatile
  1694  021D  0672               	xorwf	??_ADC_Read,w
  1695  021E  39C7               	andlw	-57
  1696  021F  0672               	xorwf	??_ADC_Read,w
  1697  0220  009F               	movwf	31	;volatile
  1698                           
  1699                           ;adc.c: 28: ADCON0bits.ADON = 1;
  1700  0221  141F               	bsf	31,0	;volatile
  1701                           
  1702                           ;adc.c: 30: _delay((unsigned long)((10)*(18432000/4000000.0)));
  1703  0222  300F               	movlw	15
  1704  0223  00F2               	movwf	??_ADC_Read
  1705  0224                     u41_27:	
  1706  0224  0BF2               	decfsz	??_ADC_Read,f
  1707  0225  2A24               	goto	u41_27
  1708                           
  1709                           ;adc.c: 32: ADCON0bits.GO = 1;
  1710  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1711  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1712  0228  151F               	bsf	31,2	;volatile
  1713  0229                     i1l105:	
  1714                           ;adc.c: 33: while(ADCON0bits.GO_DONE);
  1715                           
  1716  0229  191F               	btfsc	31,2	;volatile
  1717  022A  2A29               	goto	i1l105
  1718                           
  1719                           ;adc.c: 35: PIR1bits.ADIF = 0;
  1720  022B  130C               	bcf	12,6	;volatile
  1721  022C  0008               	return
  1722  022D                     __end_of_ADC_Read:	
  1723  007E                     btemp	set	126	;btemp
  1724  007E                     wtemp	set	126
  1725  007E                     wtemp0	set	126
  1726  0080                     wtemp1	set	128
  1727  0082                     wtemp2	set	130
  1728  0084                     wtemp3	set	132
  1729  0086                     wtemp4	set	134
  1730  0088                     wtemp5	set	136
  1731  007F                     wtemp6	set	127
  1732  007E                     ttemp	set	126
  1733  007E                     ttemp0	set	126
  1734  0081                     ttemp1	set	129
  1735  0084                     ttemp2	set	132
  1736  0087                     ttemp3	set	135
  1737  007F                     ttemp4	set	127
  1738  007E                     ltemp	set	126
  1739  007E                     ltemp0	set	126
  1740  0082                     ltemp1	set	130
  1741  0086                     ltemp2	set	134
  1742  0080                     ltemp3	set	128


Data Sizes:
    Strings     63
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     25      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_2(CODE[40]), STR_1(CODE[23]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_ADC_Read

Critical Paths under _main in BANK0

    _main->_USART_Init
    _USART_WriteString->_USART_WriteChar
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     789
                           _ADC_Init
                        _TIMER1_Init
                         _TIMER1_Set
                         _USART_Init
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     2      0     127
                                              1 BANK0      2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART_WriteChar                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          10     6      4     538
                                             15 BANK0     10     6      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER1_Set                                           2     0      2     124
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TIMER1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  7     7      0     270
                                              3 COMMON     7     7      0
                           _ADC_Read
                       i1_TIMER1_Set
                  i1_USART_WriteChar
 ---------------------------------------------------------------------------------
 (4) i1_USART_WriteChar                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) i1_TIMER1_Set                                         2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ADC_Read                                             3     1      2      86
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _TIMER1_Init
   _TIMER1_Set
   _USART_Init
     ___aldiv
   _USART_WriteString
     _USART_WriteChar

 _ISR (ROOT)
   _ADC_Read
   i1_TIMER1_Set
   i1_USART_WriteChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      1F       5       38.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2B      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Jun 13 14:25:49 2021

                          pc 0002                  __CFG_CP$OFF 0000                           l48 01F4  
                         l75 0263                           fsr 0004  i1USART_WriteChar@USART_Data 0070  
                        l273 0033                          l813 0054                          l805 0044  
                        l831 00A7                          l823 008C                          l815 0064  
                        l827 0099                          l895 01F8                          u255 0058  
                        u335 0131                 __CFG_CPD$OFF 0000                          u275 0066  
                        _ISR 00B0                          u285 007B                          u295 008D  
                        fsr0 0004   __size_of_USART_WriteString 0020                          indf 0000  
               __CFG_FOSC$HS 0000                 __CFG_LVP$OFF 0000                         ?_ISR 0070  
                       STR_1 019D                         STR_2 0175                         i1l45 0118  
                       i1l75 0269                         _OERR 00C1                         _TMR0 0001  
                       _TMR1 000E                 __CFG_WRT$OFF 0000                         _main 01B4  
                       btemp 007E             __end_of_ADC_Init 023F             __end_of_ADC_Read 022D  
                       ltemp 007E                         start 0012                         ttemp 007E  
                       wtemp 007E      __end_of_USART_WriteChar 0268                        ??_ISR 0073  
                ?_TIMER1_Set 0020              __end_of___aldiv 00B0                        ?_main 0070  
              __CFG_WDTE$OFF 0000                        i1l105 0229                        i1l941 010A  
                      i1l933 00F0                        _RCREG 001A                        u41_27 0224  
                      _SPBRG 0099                        _PORTA 0005                        _PORTB 0006  
                      _PORTC 0007                        _TRISA 0085                        _TRISB 0086  
                      _TRISC 0087                        _TXREG 0019                 USART_Init@BR 0038  
             __CFG_BOREN$OFF 0000                        pclath 000A                        ltemp0 007E  
                      ltemp1 0082                        ltemp2 0086                        ltemp3 0080  
                      ttemp0 007E                        ttemp1 0081                        ttemp2 0084  
                      ttemp3 0087                        ttemp4 007F                        status 0003  
                      wtemp0 007E                        wtemp1 0080                        wtemp2 0082  
                      wtemp3 0084                        wtemp4 0086                        wtemp5 0088  
                      wtemp6 007F                  ?_USART_Init 002F              __initialization 0015  
               __end_of_main 01F5            i1TIMER1_Set@count 0070                       ??_main 0039  
               ?_TIMER1_Init 0070                       _ADRESH 001E                       _ADRESL 009E  
        __size_of_TIMER1_Set 0009               __CFG_PWRTE$OFF 0000                    ??___aldiv 0028  
           ?_USART_WriteChar 0070              ADC_Read@channel 0070                    ?_ADC_Init 0070  
                  ?_ADC_Read 0070                       saved_w 007E          __size_of_USART_Init 004A  
              ?i1_TIMER1_Set 0070      __end_of__initialization 001D               __pcstackCOMMON 0070  
                ISR@checksum 0078               _OPTION_REGbits 0081                   ??_ADC_Init 0020  
                 ??_ADC_Read 0072               ??i1_TIMER1_Set 0072                   __pbssBANK0 0039  
                 __pmaintext 01B4                   __pintentry 0004                 ??_TIMER1_Set 0022  
       __size_of_TIMER1_Init 000F                   __stringtab 016F           __end_of_TIMER1_Set 0257  
               ??_USART_Init 0033                      ___aldiv 0021                      __ptext1 01F5  
                    __ptext2 0260                      __ptext3 0125                      __ptext4 0021  
                    __ptext5 024E                      __ptext6 023F                      __ptext7 022D  
                    __ptext8 00B0                      __ptext9 0268                 __size_of_ISR 0075  
                  _T1CONbits 0010             ___aldiv@dividend 0024           __end_of_USART_Init 016F  
       end_of_initialization 001D                    _RCSTAbits 0018             ___aldiv@quotient 002B  
       __end_ofi1_TIMER1_Set 0260            __size_of_ADC_Init 0012            __size_of_ADC_Read 0018  
                  _TXSTAbits 0098            i1_USART_WriteChar 0268           ?i1_USART_WriteChar 0070  
            TIMER1_Set@count 0020     __size_of_USART_WriteChar 0008          start_initialization 0015  
                __end_of_ISR 0125          ??i1_USART_WriteChar 0070    __end_ofi1_USART_WriteChar 0270  
                __pbssCOMMON 007A                    ___latbits 0002                __pcstackBANK0 0020  
        __end_of__stringdata 01B4                     ISR@index 0079        __size_ofi1_TIMER1_Set 0009  
                   ?___aldiv 0020                    __pstrings 016F                ??_TIMER1_Init 0020  
         USART_Init@BaudRate 002F                     _ADC_Init 022D                     _ADC_Read 0215  
          ??_USART_WriteChar 0020                 i1_TIMER1_Set 0257              ___aldiv@divisor 0020  
          interrupt_function 0004              ___aldiv@counter 0029                     _PIE1bits 008C  
                   _PIR1bits 000C   __size_ofi1_USART_WriteChar 0008                   _ADCON0bits 001F  
                __stringbase 0174                   _ADCON1bits 009F                  __stringdata 0175  
        __end_of_TIMER1_Init 024E                   _ADC_Buffer 0039             __size_of___aldiv 008F  
         __end_of__stringtab 0175            _USART_WriteString 01F5                     __ptext10 0257  
                   __ptext11 0215           ?_USART_WriteString 0070                     _contador 007A  
              __size_of_main 0041          ??_USART_WriteString 0021                  _TIMER1_Init 023F  
                 _INTCONbits 000B    __end_of_USART_WriteString 0215                     intlevel1 0000  
  USART_WriteChar@USART_Data 0020                    stringcode 016F         USART_WriteString@str 0022  
                 _TIMER1_Set 024E              _USART_WriteChar 0260                     stringdir 016F  
                   stringtab 016F                 ___aldiv@sign 002A                   _USART_Init 0125  
